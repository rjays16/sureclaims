<?php

namespace Tests\Feature\GraphQL\Queries;

use App\Model\Entities\Employer;
use Illuminate\Foundation\Testing\TestResponse;
use Tests\Feature\GraphQL\GraphQLTestCase;

/**
 * Class EmployersQueryTest
 *
 * @package Tests\Feature\GraphQL\Queries
 */
class EmployersQueryTest extends GraphQLTestCase
{

    const PEN = '123456789101';
    const NAME = 'southern philippines medical';

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->provideEmployers( 5 )->each( function ( Employer $employer ) {
            $employer->save();
        } );

        ( new Employer )->fill( [
            'pen' => self::PEN,
            'name' => self::NAME,
            'address' => 'Davao City'
        ] )->save();
    }

    private function assertEmployersResponse( TestResponse $response )
    {
        $response->assertJson( [
            'data' => [
                'employers' => [
                    [
                        'pen' => self::PEN
                    ]
                ]
            ]
        ] );
    }

    /**
     *
     */
    public function shouldBeValidStructure()
    {
        $response = $this->executeQuery( $this->query() );
        $response->assertJsonStructure( [
            'data' => [
                'employers' => [
                    '*' => [
                        'id',
                        'pen',
                        'name',
                        'address'
                    ],
                ]
            ]
        ] );
    }

    /**
     * @todo Use mock
     */
    public function shouldBeAbleSearchByName()
    {
        $response = $this->executeQuery( $this->query(), [
            'name' => self::NAME,
        ] );
        $this->assertEmployersResponse( $response );
    }

    /**
     *
     */
    public function shouldBeAbleSearchByPen()
    {
        $response = $this->executeQuery( $this->query(), [
            'name' => self::PEN,
        ] );
        $this->assertEmployersResponse( $response );
    }

    /**
     * @return string
     */
    private function query(): string
    {
        return <<<'GRAPHQL'
query Employers($name: String) {
  employers(name: $name) {
    id
    pen
    name
    address
  }
}
GRAPHQL;
    }
}

