const zeroLang = require('../lib');
const expect = chai.expect;

function noop() {
}

describe('zero-lang/type', () => {
  it('zeroLang.isArguments', () => {
    expect(zeroLang.isArguments([])).to.equal(false);
    expect(zeroLang.isArguments(arguments)).to.equal(true);
  });
  it('zeroLang.isArray', () => {
    expect(zeroLang.isArray([])).to.equal(true);
    expect(zeroLang.isArray(1)).to.equal(false);
  });
  it('zeroLang.isBoolean', () => {
    expect(zeroLang.isBoolean(true)).to.equal(true);
    expect(zeroLang.isBoolean(false)).to.equal(true);
    expect(zeroLang.isBoolean(1)).to.equal(false);
  });
  it('zeroLang.isFunction', () => {
    expect(zeroLang.isFunction(noop)).to.equal(true);
    expect(zeroLang.isFunction(1)).to.equal(false);
  });
  it('zeroLang.isNumber', () => {
    expect(zeroLang.isNumber(NaN)).to.equal(true);
    expect(zeroLang.isNumber(1)).to.equal(true);
    expect(zeroLang.isNumber('1')).to.equal(false);
  });
  it('zeroLang.isObject', () => {
    expect(zeroLang.isObject({})).to.equal(true);
    expect(zeroLang.isObject(null)).to.equal(false);
    expect(zeroLang.isObject(noop.prototype)).to.equal(true);
    expect(zeroLang.isObject(noop)).to.equal(true);
  });
  it('zeroLang.isPlainObject', () => {
    expect(zeroLang.isPlainObject({})).to.equal(true);
    expect(zeroLang.isPlainObject(null)).to.equal(false);
    expect(zeroLang.isPlainObject(noop.prototype)).to.equal(true);
    expect(zeroLang.isPlainObject(noop)).to.equal(false);
  });
  it('zeroLang.isString', () => {
    expect(zeroLang.isString('')).to.equal(true);
  });
  it('zeroLang.isError', () => {
    expect(zeroLang.isError(new Error())).to.equal(true);
  });
  it('zeroLang.isDate', () => {
    expect(zeroLang.isDate(new Date())).to.equal(true);
  });
  it('zeroLang.isRegExp', () => {
    expect(zeroLang.isRegExp(/^..$/)).to.equal(true);
  });
  it('zeroLang.isNil', () => {
    expect(zeroLang.isNil({})).to.equal(false);
    expect(zeroLang.isNil(null)).to.equal(true);
    expect(zeroLang.isNil()).to.equal(true);
    expect(zeroLang.isNil(noop)).to.equal(false);
  });
});
