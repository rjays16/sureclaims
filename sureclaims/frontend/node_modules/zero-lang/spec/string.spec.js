const zeroLang = require('../lib');
const expect = chai.expect;

describe('zero-lang/string', () => {
  it('zeroLang.isString', () => {
    expect(zeroLang.isString('')).to.equal(true);
  });
  it('zeroLang.trim', () => {
    expect(zeroLang.trim('  ')).to.equal('');
    expect(zeroLang.trim('  a')).to.equal('a');
    expect(zeroLang.trim('b  ')).to.equal('b');
    expect(zeroLang.trim('b  a')).to.equal('b  a');
  });
  it('zeroLang.trimLeft', () => {
    expect(zeroLang.trimLeft('  a')).to.equal('a');
    expect(zeroLang.trimLeft('b  ')).to.equal('b  ');
    expect(zeroLang.trimLeft('b  a')).to.equal('b  a');
  });
  it('zeroLang.trimRight', () => {
    expect(zeroLang.trimRight('  a')).to.equal('  a');
    expect(zeroLang.trimRight('b  ')).to.equal('b');
    expect(zeroLang.trimRight('b  a')).to.equal('b  a');
  });
  it('zeroLang.hasSubString', () => {
    expect(zeroLang.hasSubString('  a', 'a')).to.equal(true);
    expect(zeroLang.hasSubString('b  ', 'a')).to.equal(false);
    expect(zeroLang.hasSubString('b  a', 'b ')).to.equal(true);
  });
});

